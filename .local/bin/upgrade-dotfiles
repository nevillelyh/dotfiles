#!/bin/bash

# Upgrade .dotfiles and related packages

set -euo pipefail

msg_box() {
    line="==${1//[[:ascii:]]/=}=="
    echo "$line"
    echo "| $1 |"
    echo "$line"
}

cd "$HOME"

msg_box "Upgrading system packages"
case "$(uname -s)" in
    Darwin)
        brew update
        brew upgrade
        brew cleanup
        brew autoremove
        ;;
    Linux)
        sudo aptitude update
        sudo aptitude upgrade
        sudo aptitude autoclean
        sudo apt-get autoremove
        ;;
esac

msg_box "Upgrading Git Repository"
git pull --rebase --autostash
git submodule update --init --remote

msg_box "Upgrading Oh-My-Zsh"
zsh -i -c "omz update"

msg_box "Upgrading NeoVim"
nvim -u "$HOME/.config/nvim/dein.vim" --headless \
    '+let g:dein#install_progress_type = "none" | call dein#update() | echo "\r\n" | qall'

msg_box "Upgrading Go"
if [[ -d /usr/local/go ]]; then
    url="https://api.github.com/repos/golang/go/git/refs/tags"
    header="Accept: application/vnd.github.v3+json"
    latest=$(curl -fsSL -H "$header" $url | jq --raw-output ".[].ref" | grep "refs/tags/go" | cut -d "/" -f 3 | tail -n 1)
    current=$(go version | awk '{ print $3 }')
    if [[ "$latest" != "$current" ]]; then
        read -p "Upgrade from $current to $latest (y/N)? " -n 1 -r
        echo # (optional) move to a new line
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            sudo rm -rf /usr/local/go
            bash "$HOME/.dotfiles/files/install.sh" go
        fi
    fi
fi
for mod in $(go version -m "$HOME/.go/bin" | grep "^\s\+path\s\+" | awk '{print $2}'); do
    go install "$mod@latest"
done

msg_box "Upgrading JVM"
set +eu
# shellcheck source=/dev/null
source "$HOME/.sdkman/bin/sdkman-init.sh"
sdk update
sdk upgrade
set -eu

msg_box "Upgrading Python"
# Bash 3 on Mac missing readarray
# shellcheck disable=SC2207
pip_pkgs=($(grep "^PIP_PKGS=(" "$HOME/.dotfiles/files/bootstrap.sh" | sed "s/^PIP_PKGS=(\(.*\))$/\1/"))
pip3 install --quiet --upgrade --upgrade-strategy eager "${pip_pkgs[@]}"

msg_box "Upgrading Rust"
rustup update
# Bash 3 on Mac missing readarray
if [[ -s "$HOME/.cargo/.crates.toml" ]]; then
    # shellcheck disable=SC2207
    crates=($(grep '^"[^"]*" = \["[^"]*"\]$' "$HOME/.cargo/.crates.toml" | sed 's/^"\([^ ]*\) .*$/\1/'))
    cargo install -q "${crates[@]}"
fi

if type conda &> /dev/null; then
    msg_box "Upgrading Anaconda"
    conda update --all --name base --yes
fi

msg_box "Upgrade complete"
