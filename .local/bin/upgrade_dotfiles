#!/bin/bash

# Upgrade .dotfiles and related packages

set -euo pipefail

msg_box() {
    line="==${1//[[:alnum:][:space:]]/=}=="
    echo "$line"
    echo "# $1 #"
    echo "$line"
}

cd "$HOME"

msg_box "Upgrading system packages"
case "$(uname -s)" in
    Darwin)
        brew update
        brew upgrade
        brew cleanup
        brew autoremove
        ;;
    Linux)
        sudo aptitude update
        sudo aptitude upgrade
        sudo aptitude autoclean
        sudo apt-get autoremove
        ;;
esac

msg_box "Upgrading Git Repository"
git pull --rebase --autostash
git submodule update --init --remote

msg_box "Upgrading Oh-My-Zsh"
zsh -i -c "omz update"

msg_box "Upgrading NeoVim"
nvim -u "$HOME/.config/nvim/dein.vim" --headless \
    '+let g:dein#install_progress_type = "none" | call dein#update() | echo "\r\n" | qall'

msg_box "Upgrading JVM"
set +eu
# shellcheck source=/dev/null
source "$HOME/.sdkman/bin/sdkman-init.sh"
sdk update
sdk upgrade
set -eu

msg_box "Upgrading Python"
readarray -d " " -t pip_pkgs < <(grep "^PIP_PKGS=(" "$HOME/.dotfiles/files/bootstrap.sh" | sed "s/^PIP_PKGS=(\(.*\))$/\1/")
pip3 install --quiet --upgrade --upgrade-strategy eager "${pip_pkgs[@]}"

msg_box "Upgrading Rust"
rustup update
readarray -t crates < <(grep '^"[^"]*" = \["[^"]*"\]$' "$HOME/.cargo/.crates.toml" | sed 's/^"\([^ ]*\) .*$/\1/')
cargo install -q "${crates[@]}"

if type conda &> /dev/null; then
    msg_box "Upgrading Anaconda"
    conda update --all --name base --yes
fi

msg_box "Upgrade complete"
