#!/bin/zsh

set -euo pipefail

msg_box() {
    LINE="##$(echo "$1" | sed 's/./#/g')##"
    echo "$LINE"
    echo "# $1 #"
    echo "$LINE"
}

cd $HOME

msg_box "Upgrading Git Repository"
STATUS=$(git status --porcelain --untracked-files=no)
[ -z "$STATUS" ] || git stash save "tmp-git-update"
git pull
git submodule update --init --remote
[ -z "$STATUS" ] || git stash pop

msg_box "Upgrading Oh-My-Zsh"
set +eu
source "$HOME/.dotfiles/oh-my-zsh/oh-my-zsh.sh"
omz update
set -euo pipefail

msg_box "Upgrading NeoVim"
VS='+let g:dein#install_progress_type = "none" | call dein#update() | echo "\r\n" | qall'
nvim -u $HOME/.config/nvim/dein.vim --headless $VS

msg_box "Upgrading Python Packages"
PIP_PKGS=$(grep '^PIP_PKGS="' $HOME/.dotfiles/files/bootstrap.sh | sed 's/^PIP_PKGS="\(.*\)"$/\1/')
pip install --quiet --upgrade --upgrade-strategy eager ${=PIP_PKGS}

msg_box "Upgrading Rust"
rustup update
CRATES=$(grep '^"[^"]*" = \["[^"]*"\]$' $HOME/.cargo/.crates.toml | sed 's/^"\([^ ]*\) .*$/\1/')
cargo install -q ${=CRATES}

msg_box "Upgrading SDKMAN"
set +eu
source "$HOME/.sdkman/bin/sdkman-init.sh"
sdk update
sdk upgrade
set -euo pipefail

case "$(uname -s)" in
    Darwin)
        msg_box "Upgrading Homebrew"
        brew update
        brew upgrade
        brew cleanup
        ;;
    Linux)
        msg_box "Upgrading Aptitude"
        sudo aptitude update
        sudo aptitude upgrade
        sudo aptitude autoclean
        ;;
esac
